Object subclass: #exampleSwigObject  instanceVariableNames: 'swigRef swigCMemOwn'  classVariableNames: ''  poolDictionaries: ''  category: 'example'!Object subclass: #exampleSwigRef  instanceVariableNames: 'pointer session'  classVariableNames: ''  poolDictionaries: ''  category: 'example'!!exampleSwigObject class methodsFor: 'swig runtime'!fromCPtr: swigCPtr    ^ self fromCPtr: swigCPtr owner: true.!fromCPtr: swigCPtr owner: swigOwner    ^ self fromRef: (exampleSwigRef new: swigCPtr) owner: swigOwner!fromRef: swigRef owner: swigOwner    | res |    res := self basicNew initWithRef: swigRef owner: swigOwner; yourself.    swigOwner ifTrue: [        NBExternalResourceManager addResource: res.    ].    ^ res.!finalizeResourceData: aSwigRef    aSwigRef isValid ifTrue: [        self destroySwigCPtr: aSwigRef validCPtr.        aSwigRef makeInvalid    ]!destroySwigCPtr: pointerToFree    self subclassResponsibility! !!exampleSwigObject methodsFor: 'swig runtime'!initWithRef: newSwigRef owner: newSwigCMemOwn    swigRef := newSwigRef.    swigCMemOwn := newSwigCMemOwn.!swigValidCPtr    ^ swigRef validCPtr!resourceData    ^ swigRef!destroy    swigRef ifNotNil: [        swigCMemOwn ifTrue: [            self class finalizeResourceData: swigRef.                        swigCMemOwn := false.        ].        swigRef := nil    ]! !!exampleSwigRef class methodsFor: 'swig runtime'!new: pointer    ^ self new pointer: pointer; yourself! !!exampleSwigRef methodsFor: 'swig runtime'!initialize    session := Smalltalk session.!pointer: aPointer    pointer := aPointer!pointer    ^ pointer!isValid    ^ pointer ~~ nil and: [session == (Smalltalk session)]!validCPtr    self isValid ifFalse: [ self error: 'Trying to use an invalid reference' ].    ^ pointer!makeInvalid    pointer := nil.! !Object subclass: #exampleCInterface  instanceVariableNames: ''  classVariableNames: ''  poolDictionaries: ''  category: 'example'!Object subclass: #example  instanceVariableNames: ''  classVariableNames: ''  poolDictionaries: ''  category: 'example'!!exampleCInterface class methodsFor: 'swig wrapper'!nbLibraryNameOrHandle	^ NativeBoost forCurrentPlatform loadModule: 'example'! !!exampleCInterface methodsFor: 'swig wrapper'!nbLibraryNameOrHandle	^ self class nbLibraryNameOrHandle! !!exampleCInterface class methodsFor: 'swig wrapper'!gcd_nbarg1: nbarg1 nbarg2: nbarg2	<primitive: #primitiveNativeCall module: #NativeBoostPlugin error: errorCode>	^ self nbCall: #( int PharoNB_gcd ( int nbarg1, int nbarg2 ) )! !!example class methodsFor: 'swig wrapper'!gcd: x y: y     | ret |    ret := exampleCInterface gcd_nbarg1: x nbarg2: y.    ^ ret.  ! !!exampleCInterface class methodsFor: 'swig wrapper'!Foo_set_nbarg1: nbarg1	<primitive: #primitiveNativeCall module: #NativeBoostPlugin error: errorCode>	^ self nbCall: #( void PharoNB_Foo_set ( double nbarg1 ) )! !!example class methodsFor: 'swig wrapper'!Foo: swigNewValue     exampleCInterface Foo_set_nbarg1: swigNewValue.  ! !!exampleCInterface class methodsFor: 'swig wrapper'!Foo_get	<primitive: #primitiveNativeCall module: #NativeBoostPlugin error: errorCode>	^ self nbCall: #( double PharoNB_Foo_get (  ) )! !!example class methodsFor: 'swig wrapper'!Foo     | ret |    ret := exampleCInterface Foo_get.    ^ ret.  ! !!example class methodsFor: 'swig wrapper'!initialize"	self initialize"! !